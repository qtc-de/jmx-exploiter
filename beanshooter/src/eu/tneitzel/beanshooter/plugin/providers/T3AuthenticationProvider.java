package eu.tneitzel.beanshooter.plugin.providers;

import java.util.HashMap;
import java.util.Map;

import javax.naming.Context;
import javax.management.remote.JMXConnector;
import javax.management.remote.JMXConnectorFactory;
import javax.rmi.ssl.SslRMIClientSocketFactory;

import eu.tneitzel.beanshooter.operation.BeanshooterOption;
import eu.tneitzel.beanshooter.plugin.IAuthenticationProvider;

/**
 * T3 compatible authentication provider. Has only some small deviations from the default
 * authentication provider.
 *
 * @author Tobias Neitzel (@qtc_de)
 */
public class T3AuthenticationProvider implements IAuthenticationProvider
{
    /**
     * Authentication to T3 endpoints requires the credentials to be passed in a different
     * format than for the usual JMX auth. Moreover, an additional provider package needs
     * to be defined.
     *
     * @param username the desired username for T3 authentication
     * @param password the desired password for T3 authentication
     * @return environment that should be used during the newClient call
     */
    public Map<String,Object> getEnv(String username, String password)
    {
        HashMap<String,Object> env = new HashMap<String,Object>();

        env.put(JMXConnectorFactory.PROTOCOL_PROVIDER_PACKAGES, "weblogic.management.remote");

        if(username != null && password != null)
        {
            env.put(Context.SECURITY_PRINCIPAL, username);
            env.put(Context.SECURITY_CREDENTIALS, password);
        }

        return env;
    }
}
